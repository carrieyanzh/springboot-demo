pipeline {
    agent any
     tools {
        //jdk 'jdk17'
        maven 'Maven3'
    }
    parameters {
        string(name: 'GIT_REPO',   defaultValue: 'https://github.com/carrieyanzh/springboot-demo.git', description: 'Git repository URL')
        string(name: 'GIT_BRANCH', defaultValue: 'main',                                           description: 'Branch to build')
    }
    stages {
        stage('Prepare Workspace') {
            steps {
                script {
                    env.WORKSPACE_DIR = "${env.WORKSPACE}/${env.BUILD_NUMBER}"
                    sh "mkdir -p ${env.WORKSPACE_DIR}"
                }
            }
        }

        stage('Checkout Code') {
            steps {
                script {                   
                    dir("${env.WORKSPACE_DIR}") {
                        git branch: "${params.GIT_BRANCH}", url: "${params.GIT_REPO}"
                    }
                    echo " params git branch ${params.GIT_BRANCH}, url: ${params.GIT_REPO} ${env.WORKSPACE}/${env.BUILD_NUMBER} "
                }
            }
        }

        stage('Show Env') {
            steps {
                script {
                    echo "PATH: ${env.PATH}"
                    echo "BUILD_ID: ${env.BUILD_ID}"
                    echo "BUILD_NUMBER: ${env.BUILD_NUMBER}"
                    echo "WORKSPACE: ${env.WORKSPACE}"
                }
            }
        }
        stage('Info') {
            steps {
                script {
                    echo "Build Number: ${currentBuild.number}"
                    echo "Build ID: ${currentBuild.id}"
                    echo "Display Name: ${currentBuild.displayName}"
                    echo "Result: ${currentBuild.result}"
                    currentBuild.description = "This build is for testing dynamic checkout"
                }
            }
        }
         stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test || true'  // run tests but don't fail the stage
                
            }
        }
        stage('Package') {
            steps {
                sh "mvn package"
            }
        }
    }
}
